<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,user-scalable=no,maximum-scale=1">
    <meta name="format-detection" content="telephone=no">
    <title>Cinerino LIFF App</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="https://d.line-scdn.net/liff/1.0/sdk.js"></script>
    <script src="/js/jquery.seat-charts.min.js"></script>
    <link href="http://fonts.googleapis.com/css?family=Lato:400,700" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="/css/jquery.seat-charts.css">
    <link rel="stylesheet" href="/css/seat-charts.css">
</head>

<body>
    <div class="wrapper">
        <div class="container">
            <div id="seat-map">
                <div class="front-indicator">Front</div>

            </div>
            <div class="booking-details">
                <h2>Booking Details</h2>

                <h3> Selected Seats (
                    <span id="counter">0</span>):</h3>
                <ul id="selected-seats"></ul>

                Total:
                <b>$
                    <span id="total">0</span>
                </b>

                <button class="checkout-button">Checkout &raquo;</button>

                <div id="legend"></div>
            </div>
        </div>
    </div>
</body>

<script>
    liff.init(
        data => {
            // Now you can call LIFF API
            const userId = data.context.userId;
            liff.getProfile()
                .then(profile => {
                    const name = profile.displayName
                })
                .catch((err) => {
                    console.log('error', err);
                });
        },
        err => {
            // LIFF initialization failed
        }
    );

    $(document).ready(function () {
        var $cart = $('#selected-seats'),
            $counter = $('#counter'),
            $total = $('#total'),
            sc = $('#seat-map').seatCharts({
                map: [
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee___',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'eeeee',
                ],
                seats: {
                    // f: {
                    //     price: 100,
                    //     classes: 'first-class', //your custom CSS class
                    //     category: 'First Class'
                    // },
                    e: {
                        price: 40,
                        classes: 'economy-class', //your custom CSS class
                        category: 'Economy Class'
                    }
                },
                naming: {
                    top: false,
                    rows: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],
                    columns: ['1', '2', '3', '4', '5', '6', '7', '8', '8', '10', '11', '12'],
                    getId: function (character, row, column) {
                        return row + '-' + column;
                    },
                    getLabel: function (character, row, column) {
                        return row + '-' + column;
                    }
                },
                legend: {
                    node: $('#legend'),
                    items: [
                        // ['f', 'available', 'First Class'],
                        ['e', 'available', 'Economy Class'],
                        ['f', 'unavailable', 'Already Booked']
                    ]
                },
                click: function () {
                    if (this.status() == 'available') {
                        //let's create a new <li> which we'll add to the cart items
                        $('<li>' + this.data().category + ' Seat # ' + this.settings.label + ': <b>$' + this.data().price + '</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
                            .attr('id', 'cart-item-' + this.settings.id)
                            .data('seatId', this.settings.id)
                            .appendTo($cart);

                        /*
                         * Lets update the counter and total
                         *
                         * .find function will not find the current seat, because it will change its stauts only after return
                         * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
                         */
                        $counter.text(sc.find('selected').length + 1);
                        $total.text(recalculateTotal(sc) + this.data().price);

                        return 'selected';
                    } else if (this.status() == 'selected') {
                        //update the counter
                        $counter.text(sc.find('selected').length - 1);
                        //and total
                        $total.text(recalculateTotal(sc) - this.data().price);

                        //remove the item from our cart
                        $('#cart-item-' + this.settings.id).remove();

                        //seat has been vacated
                        return 'available';
                    } else if (this.status() == 'unavailable') {
                        //seat has been already booked
                        return 'unavailable';
                    } else {
                        return this.style();
                    }
                }
            });

        //this will handle "[cancel]" link clicks
        $('#selected-seats').on('click', '.cancel-cart-item', function () {
            //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
            sc.get($(this).parents('li:first').data('seatId')).click();
        });

        //let's pretend some seats have already been booked
        sc.get(['A-2', 'D-1']).status('unavailable');
        // sc.status('1_1', 'unavailable');

        $('.checkout-button').on('click', function () {
            var seatNumbers = [];
            sc.find('selected').each(function () {
                seatNumbers.push(this.settings.id);
            });
            console.log('checking out...', seatNumbers);

            var message = 'postback:' + 'action=selectSeatOffers&seatNumbers=' + seatNumbers.join(',') + '&eventId=' + '<%= eventId %>';
            console.log('sending message...', message);
            liff.sendMessages([
                {
                    type: 'text',
                    text: message
                }
            ])
                .then(() => {
                    console.log('message sent');
                    liff.closeWindow();
                })
                .catch((err) => {
                    console.log('error', err);
                });
        });
    });

    function recalculateTotal(sc) {
        var total = 0;

        //basically find every selected seat and sum its price
        sc.find('selected').each(function () {
            total += this.data().price;
        });

        return total;
    }
</script>

</html>